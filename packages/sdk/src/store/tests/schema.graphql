type Transaction @entity {
  id: ID!
  sender: Owner!
  gas: BigInt!
  gasPrice: BigDecimal!
  isSuccess: Boolean
  raw: Bytes
  count: Int
  value: Float
  arrayValue: [String]!
  arrayValue2: [String!]
  arrayOfArrayValue: [[String]]!
  dateValue: Timestamp
  receipts: [TransactionReceipt!]! @derivedFrom(field: "transaction")
  int8Value: Int8
}

type TransactionReceipt @entity {
  id: ID!
  status: TransactionStatus
  transaction: Transaction
}

interface Owner {
  id: ID!
  name: String!
}

type User implements Owner @entity {
  id: ID!
  name: String!
  transactions: [Transaction!]! @derivedFrom(field: "sender")
  organizations: [Organization!]! @derivedFrom(field: "members")
}

type Organization implements Owner @entity(sparse: true) {
  id: ID!
  name: String!
  members: [User!]!
}

type NonEntity {
  id: ID
}

enum TransactionStatus {
  SUCCESS
  FAILURE
}
